@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
    }
}

<div class="prod-box" data-productid="@Model.Id">
    <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
        <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
        <div class="prod-box title">@Model.Name</div>
        <div class="prod-box prod-descr">@Model.ShortDescription</div>
    </a>
    <div class="prod-box priceblock">
        <input type="text" class="prod-box-priceblock-qty" value="1" /> x @Model.ProductPrice.Price
        @if (!Model.ProductPrice.DisableBuyButton)
        {
            if (Model.ProductPrice.StockQuantity == 0)
            {
                <input type="button" class="prod-box-priceblock-btn notinstock" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" />
            }
            else
            {
                <input type="button" class="prod-box-priceblock-btn" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" />
            }
        }

    </div>
</div>
